name: "[M] Plugin and CLI: publish as archives"

on:
  workflow_dispatch:
    inputs:
      version-postfix:
        type: choice
        description: "It adds alpha or beta postfix to version."
        required: true
        default: beta
        options:
          - no-postfix
          - alpha
          - beta
  push:
    branches: [egor-vasiliev/test-self-hosted-runner]

#env:
  #GIT_USERNAME: bot
  # repo name in events doesn't fit our requirements because contains slash symbol
  # https://docs.github.com/en/developers/webhooks-and-events/events/github-event-types
  #GIT_REPO_NAME: UTBotJava
  #SSL_CERT_DIR: /etc/ssl/certs
  #NODE_EXTRA_CA_CERTS: /etc/ssl/certs/WebSecureInternetGatewayCA.pem
  #DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER: 0

jobs:
  publish_plugin_and_cli:
    #runs-on: [self-hosted, local]
    runs-on: [self-hosted, home]
    container:
      image: ubuntu:20.04
      #volumes:
      #  - /home/github-runner/certificates/:/usr/local/share/ca-certificates/

    steps:
      - name: Install prerequisites
        run: |
          set -x
          printenv
          echo ${{ secrets.GITHUB_TOKEN }} > /tmp/token
          apt update
          apt install -y unzip \
                         fonts-dejavu \
                         fontconfig \
                         curl \
                         git \
                         iproute2 \
                         tcpdump \
                         ca-certificates

      - uses: actions/checkout@v3
        with:
          ssh-strict: false

#      - name: Add cert to keystore
#        run: |
#          ${JAVA_HOME}/bin/keytool \
#                      -import \
#                      -trustcacerts \
#                      -alias web-gateway-2 \
#                      -file /etc/ssl/certs/WebSecureInternetGatewayCA.pem \
#                      -keystore test-store \
#                      -noprompt \
#                      -storepass ${{ secrets.KEYSTORE_PASS }}

#      - uses: actions/setup-java@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          #java-version: '8'
          #distribution: 'zulu'
          #java-package: jdk+fx
          #cache: gradle
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 6.8

      - name: Set environment variables
        run: |
          echo "VERSION="$(date +%Y).$(date +%-m)"" >> $GITHUB_ENV
          echo "POSTFIX=${{ github.event.inputs.version-postfix }}" >> $GITHUB_ENV

      - name: Create version with postfix
        if: ${{ (env.POSTFIX == 'alpha') || (env.POSTFIX == 'beta') }}
        run:
          echo "VERSION=${{ env.VERSION }}-${{ env.POSTFIX }}" >> $GITHUB_ENV

      - name: Build UTBot IntelliJ IDEA plugin
        run: |
          export KOTLIN_HOME="/usr"
          gradle buildPlugin --no-daemon -PsemVer=${{ env.VERSION }}
          cd utbot-intellij/build/distributions
          unzip utbot-intellij-${{ env.VERSION }}.zip

      - name: Archive UTBot IntelliJ IDEA plugin
        uses: actions/upload-artifact@v2
        with:
          name: utbot-intellij-${{ env.VERSION }}
          path: utbot-intellij/build/distributions/*

      - name: Build UTBot CLI
        run: |
          export KOTLIN_HOME="/usr"
          cd utbot-cli
          gradle clean build --no-daemon -PsemVer=${{ env.VERSION }}
          cd build/libs

      - name: Archive UTBot CLI
        uses: actions/upload-artifact@v2
        with:
          name: utbot-cli-${{ env.VERSION }}
          path: utbot-cli/build/libs/utbot-cli-${{ env.VERSION }}.jar
